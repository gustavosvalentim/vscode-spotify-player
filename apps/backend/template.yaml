AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  vscode-spotify-player-backend

  Sample SAM Template for vscode-spotify-player-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Parameters:
  ClientID:
    Type: String
    Description: Spotify application client id
  ClientSecret:
    Type: String
    Description: Spotify application client secret
  RedirectURI:
    Type: String
    Description: Spotify application redirect URI
  AuthorizeURL:
    Type: String
    Description: Spotify authorize endpoint URL
    Default: https://accounts.spotify.com/authorize
  TokenURL:
    Type: String
    Description: Spotify token endpoint URL
    Default: https://accounts.spotify.com/api/token
  Scopes:
    Type: String
    Description: Spotify scopes
    Default: "user-modify-playback-state user-read-playback-state"
Resources:
  AuthorizeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: out/authorize.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      Environment:
        Variables:
          CLIENT_ID: !Ref ClientID
          REDIRECT_URI: !Ref RedirectURI
          SCOPE: !Ref Scopes
          AUTHORIZE_URL: !Ref AuthorizeURL
      Events:
        Authorize:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /authorize
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - src/authorize.ts

  TokenFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: out/exchange-code.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      Environment:
        Variables:
          CLIENT_ID: !Ref ClientID
          CLIENT_SECRET: !Ref ClientSecret
          REDIRECT_URI: !Ref RedirectURI
          TOKEN_URL: !Ref TokenURL
      Events:
        Token:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /token
            Method: post
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - src/exchange-code.ts

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
